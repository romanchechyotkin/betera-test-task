version: '3.7'

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  postgres:
    container_name: postgres
    build:
      dockerfile: Dockerfile
      context: ./pkg/postgresql
    restart: always
    ports:
      - "5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "5432"
      POSTGRES_DB: "betera"
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - app-network

  server:
    container_name: server
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      MINIO_HOST: "minio"
      MINIO_PORT: "9000"
      MINIO_ACCESS_KEY: "p2hVVCLRaaxzMsIdEZBC"
      MINIO_SECRET_KEY: "EnnCxVNoekNmsokLY3A8d6t2sjl0ex08jr5Irwxs"
      MINIO_BUCKET_NAME: "betera"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "betera"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "5432"
      ENVIRONMENT: "dev" # dev, prod
    depends_on:
      - minio
      - postgres
    networks:
      - app-network
    ports:
      - "8080:8080"


networks:
  app-network:
    driver: bridge

volumes:
  data:
  minio-storage:
